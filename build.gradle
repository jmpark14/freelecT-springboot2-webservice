plugins {
    // gradle5부터 gradle plugin 사용법 변경
    // gradle plugin 사이트에 명시
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group 'com.toma.book'
version '1.0-SNAPSHOT0-'+new Date().format("yyymmddhhmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

// junit 사용위해 필수로 선언되어야 함
test {
    useJUnitPlatform()
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    // gradle6가 되면서 complie, testCompile는 Soft Deprecate 됨
    // 대신 implementation, testImplementation이 추가됨
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    //Lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    //spring-boot-starter-data-jpa
    // 스프링 부트용 Spring Data Jpa 추상화 라이브러리
    // 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전 관리
    implementation('org.mariadb.jdbc:mariadb-java-client')
    implementation('com.h2database:h2')
    //h2
    // 인메모리 관계형 데이터베이스
    // 별도의 설치 필요없이 프로젝트 의존성만으로 관리 가능
    // 메모리에서 실행되기 때문에 애플리케이션 재시작할때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용됨
    // 여기서는 JPA의 테스트, 로컬 환경에서의 구동에서 사용할 예정

    //implementation('org.springframework.boot:spring-boot-starter-oauth2-client')    //권한 관련
    //implementation('org.springframework.session:spring-session-jdbc')               //권한 관련

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    //testImplementation('org.springframework.security:spring-security-test')         //권한 관련
}
